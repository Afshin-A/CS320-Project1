@startuml

skinparam groupInheritance 2
page 2x2
skinparam pageMargin 10
skinparam pageExternalColor gray
skinparam pageBorderColor black
hide empty members

'skinparam genericDisplay old


package services {
    abstract class Service<T extends ServiceData> {
        #Map<String, T>
        #validateID(String)
        +add(String, T)
        +T remove(String)
        #update(String, T)
    }
    class ContactService extends Service {
        +update(String, String, String, String, String)
        +update(String, Contact)
    }
    class TaskService extends Service {
        +update(String, String, String)
        +update(String, Task)
    }
    class AppointmentService extends Service {

    }
}

package data {
    abstract class ServiceData {
        #validateField(String, int)
    }
    class Contact extends ServiceData {
        -String firstName
        -String lastName
        -String phone
        -String address
        +Contact(String, String, String, String)
        +setFirstName(String)
        +setLastName(String)
        +setPhone(String)
        +setAddress(String)
    }
    class Task extends ServiceData {
        -String taskName
        -String taskDescription
        +Task(String, String)
        +setTaskName(String)
        +setTaskDescription(String)
    }
    class Appointment extends ServiceData {
        -Date appointmentDate
        -String appointmentDescription
        +Appointment(Date, String)
        +setAppointmentDate(Date)
        +setAppointmentDescription(String)
    }
}


package validations {
    class Validations {
        {static} +validateStringLengthIsInRange(String, int)
        {static} +validateStringLengthEquals(String, int)
        {static} +validateStringContainsAllDigits(String)
        {static} +validateObjectNotNull(Object)
    }
'    note left of Validations::validateObjectNotNull
'    "Test"
'    end note
}

class java.util.Date

services -- data
data -- validations
ServiceData -- validations
java.util.Date -- Appointment



@enduml